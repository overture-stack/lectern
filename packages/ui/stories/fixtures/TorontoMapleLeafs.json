{
	"name": "Hockey Game Stats",
	"version": "1.0.0",
	"meta": {
		"description": "A comprehensive data dictionary for tracking statistics in a hockey game, with a focus on providing rich examples for all supported features.",
		"author": "Claude AI"
	},
	"references": {
		"maple_leafs_roster": {
			"description": "The official roster for the Toronto Maple Leafs.",
			"values": [
				"Matthews",
				"Nylander",
				"Tavares",
				"Rielly",
				"Domi",
				"Bertuzzi",
				"Knies",
				"McMann",
				"Holmberg",
				"Kampf",
				"Reaves",
				"Dewar",
				"Lorentz",
				"Robertson",
				"Pacioretty",
				"McCabe",
				"Tanev",
				"Ekman-Larsson",
				"Benoit",
				"Timmins",
				"Hakanpaa",
				"Woll",
				"Stolarz",
				"Murray"
			]
		},
		"gender_options": {
			"description": "Standard gender identification options including missing data categories.",
			"values": [
				"Man",
				"Woman",
				"Another Gender",
				"Prefer not to answer",
				"Not applicable",
				"Missing - Unknown",
				"Missing - Not collected",
				"Missing - Not provided",
				"Missing - Restricted access"
			]
		},
		"player_status": {
			"description": "Player availability status options.",
			"values": ["Active", "Injured", "Suspended", "Traded", "Retired"]
		},
		"injury_types": {
			"description": "Types of injuries that can occur in hockey.",
			"values": ["Concussion", "Broken bone", "Muscle strain", "Ligament tear", "Cut/Laceration", "Bruise/Contusion"]
		},
		"position_types": {
			"description": "Hockey player positions.",
			"values": ["Center", "Left Wing", "Right Wing", "Left Defense", "Right Defense", "Goaltender"]
		}
	},
	"schemas": [
		{
			"name": "game_statistics",
			"description": "A schema for recording the statistics of a single hockey game.",
			"fields": [
				{
					"name": "game_id",
					"unique": true,
					"valueType": "string",
					"description": "A unique identifier assigned to any given game played by the Toronto Maple Leafs. Examples: TOR_2024_001, MTL_2024_H01",
					"restrictions": {
						"required": true,
						"regex": "^[A-Z]{3}_[0-9]{4}_[A-Z0-9]{1,3}$"
					},
					"meta": {
						"examples": ["TOR_2024_001", "MTL_2024_H01", "BOS_2024_P01"]
					}
				},
				{
					"name": "season_year",
					"valueType": "integer",
					"description": "The NHL season year for this game.",
					"restrictions": {
						"required": true,
						"range": { "min": 2000, "max": 2030 }
					}
				},
				{
					"name": "game_date",
					"valueType": "string",
					"description": "Date the game was played in YYYY-MM-DD format.",
					"restrictions": {
						"required": true,
						"regex": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
					},
					"meta": {
						"examples": ["2024-01-15", "2024-03-20"]
					}
				},
				{
					"name": "home_team_score",
					"valueType": "integer",
					"description": "Final score for the home team.",
					"restrictions": {
						"required": true,
						"range": { "min": 0, "max": 20 }
					}
				},
				{
					"name": "away_team_score",
					"valueType": "integer",
					"description": "Final score for the away team.",
					"restrictions": {
						"required": true,
						"range": { "min": 0, "max": 20 }
					}
				},
				{
					"name": "overtime_duration",
					"valueType": "number",
					"description": "Duration of overtime in minutes (if applicable).",
					"restrictions": {
						"range": { "exclusiveMin": 0, "max": 20 }
					}
				},
				{
					"name": "attendance",
					"valueType": "integer",
					"description": "Number of fans in attendance.",
					"restrictions": {
						"range": { "exclusiveMin": 0, "exclusiveMax": 25000 }
					}
				},
				{
					"name": "three_stars_of_the_game",
					"valueType": "string",
					"isArray": true,
					"delimiter": "|",
					"description": "The 'three stars' is a long-standing hockey tradition to recognize the three best individual performances in a game.",
					"restrictions": {
						"required": true,
						"codeList": "#/maple_leafs_roster/values",
						"count": { "min": 3, "max": 3 }
					},
					"meta": {
						"examples": ["Matthews|Nylander|Rielly"]
					}
				},
				{
					"name": "game_tags",
					"valueType": "string",
					"isArray": true,
					"delimiter": ",",
					"description": "Tags to categorize the game type or significance.",
					"restrictions": {
						"codeList": [
							"Regular Season",
							"Playoffs",
							"Exhibition",
							"Rivalry",
							"Special Event",
							"Home Opener",
							"Season Finale"
						],
						"count": { "min": 1, "max": 4 }
					}
				},
				{
					"name": "weather_conditions",
					"valueType": "string",
					"isArray": true,
					"delimiter": ";",
					"description": "Weather conditions for outdoor games.",
					"restrictions": {
						"codeList": ["Clear", "Cloudy", "Light Snow", "Heavy Snow", "Rain", "Windy"],
						"count": { "exclusiveMax": 3 }
					}
				},
				{
					"name": "promotional_items",
					"valueType": "string",
					"isArray": true,
					"delimiter": ",",
					"description": "Items given away during the game.",
					"restrictions": {
						"codeList": ["Bobblehead", "Jersey", "Puck", "Poster", "Magnet", "Keychain"],
						"count": { "exclusiveMin": 0 }
					}
				},
				{
					"name": "star_selections",
					"valueType": "string",
					"isArray": true,
					"delimiter": "|",
					"description": "Exactly 3 players selected as stars of the game.",
					"restrictions": {
						"required": true,
						"codeList": "#/maple_leafs_roster/values",
						"count": 3
					}
				},
				{
					"name": "penalty_types",
					"valueType": "string",
					"isArray": true,
					"delimiter": ",",
					"description": "Select at least 1 from available penalty types.",
					"restrictions": {
						"codeList": ["Minor", "Major", "Misconduct", "Match", "Penalty Shot"],
						"count": { "min": 1 }
					}
				},
				{
					"name": "referee_ratings",
					"valueType": "integer",
					"isArray": true,
					"delimiter": ",",
					"description": "Up to 4 referee performance ratings.",
					"restrictions": {
						"uniqueKey": ["game_id", "season_year", "game_date", "home_team_score", "away_team_score"]
					}
				}
			]
		},
		{
			"name": "player_profiles",
			"description": "Contains profile information for each player.",
			"fields": [
				{
					"name": "player_name",
					"valueType": "string",
					"unique": true,
					"description": "Full name of the player as it appears on the roster.",
					"restrictions": {
						"required": true,
						"codeList": "#/maple_leafs_roster/values"
					}
				},
				{
					"name": "jersey_number",
					"valueType": "integer",
					"unique": true,
					"description": "Player's jersey number (must be unique on team).",
					"restrictions": {
						"required": true,
						"range": { "min": 1, "max": 99 }
					}
				},
				{
					"name": "position",
					"valueType": "string",
					"description": "Primary playing position.",
					"restrictions": {
						"required": true,
						"codeList": "#/position_types/values"
					}
				},
				{
					"name": "age",
					"valueType": "integer",
					"description": "Player's current age in years.",
					"restrictions": {
						"required": true,
						"range": { "min": 18, "max": 45 }
					}
				},
				{
					"name": "games_played",
					"valueType": "integer",
					"description": "Total number of games played this season.",
					"restrictions": {
						"required": true,
						"range": { "min": 0 }
					}
				},
				{
					"name": "is_active",
					"valueType": "boolean",
					"description": "Whether the player is currently active on the roster.",
					"restrictions": {
						"required": true
					}
				},
				{
					"name": "player_status",
					"valueType": "string",
					"description": "Current status of the player.",
					"restrictions": {
						"required": true,
						"codeList": "#/player_status/values"
					}
				},
				{
					"name": "injury_details",
					"valueType": "string",
					"description": "If the player status is 'Injured', specify the injury details.",
					"restrictions": {
						"if": {
							"conditions": [
								{
									"fields": ["player_status"],
									"match": {
										"value": "Injured"
									}
								}
							]
						},
						"then": {
							"required": true,
							"codeList": "#/injury_types/values"
						},
						"else": {
							"empty": true
						}
					}
				},
				{
					"name": "suspension_games_remaining",
					"valueType": "integer",
					"description": "Number of games remaining in suspension.",
					"restrictions": {
						"if": {
							"conditions": [
								{
									"fields": ["player_status"],
									"match": {
										"value": "Suspended"
									}
								}
							]
						},
						"then": {
							"required": true,
							"range": { "min": 1, "max": 82 }
						},
						"else": {
							"empty": true
						}
					}
				},
				{
					"name": "salary_cap_hit",
					"valueType": "number",
					"description": "Player's salary cap hit in millions of dollars.",
					"restrictions": {
						"range": { "exclusiveMax": 15.0 }
					}
				},
				{
					"name": "contract_years_remaining",
					"valueType": "integer",
					"description": "Years remaining on current contract.",
					"restrictions": {
						"range": { "exclusiveMin": 0, "max": 8 }
					}
				}
			]
		},
		{
			"name": "game_events",
			"description": "Records specific events that occur during a game.",
			"fields": [
				{
					"name": "event_id",
					"valueType": "string",
					"unique": true,
					"description": "Unique identifier for each game event.",
					"restrictions": {
						"required": true,
						"regex": "^EVT_[0-9]{8}_[0-9]{3}$"
					},
					"meta": {
						"examples": ["EVT_20240115_001", "EVT_20240115_002"]
					}
				},
				{
					"name": "game_id",
					"valueType": "string",
					"description": "Reference to the game where this event occurred.",
					"restrictions": {
						"required": true,
						"foreignKey": [
							{
								"schema": "game_statistics",
								"mappings": [
									{
										"local": "game_id",
										"foreign": "game_id"
									}
								]
							}
						]
					}
				},
				{
					"name": "player_name",
					"valueType": "string",
					"description": "Name of the player involved in the event.",
					"restrictions": {
						"required": true,
						"foreignKey": [
							{
								"schema": "player_profiles",
								"mappings": [
									{
										"local": "player_name",
										"foreign": "player_name"
									}
								]
							}
						]
					}
				},
				{
					"name": "event_type",
					"valueType": "string",
					"description": "Type of event that occurred.",
					"restrictions": {
						"required": true,
						"codeList": ["goal", "assist", "penalty", "save", "shot", "hit", "block"]
					}
				},
				{
					"name": "period",
					"valueType": "integer",
					"description": "Game period when the event occurred.",
					"restrictions": {
						"required": true,
						"codeList": [1, 2, 3, 4]
					}
				},
				{
					"name": "time_in_period",
					"valueType": "string",
					"description": "Time within the period when event occurred (MM:SS format).",
					"restrictions": {
						"required": true,
						"regex": "^[0-1][0-9]:[0-5][0-9]$"
					},
					"meta": {
						"examples": ["05:30", "12:45", "19:59"]
					}
				}
			],
			"restrictions": {
				"foreignKeys": [
					{
						"schema": "game_statistics",
						"mappings": [{ "local": "game_id", "foreign": "game_id" }]
					},
					{
						"schema": "player_profiles",
						"mappings": [{ "local": "player_name", "foreign": "player_name" }]
					}
				]
			}
		},
		{
			"name": "advanced_stats",
			"description": "Advanced statistical measures for players and games.",
			"fields": [
				{
					"name": "player_name",
					"valueType": "string",
					"description": "Name of the player these stats belong to.",
					"restrictions": {
						"required": true,
						"foreignKey": [
							{
								"schema": "player_profiles",
								"mappings": [
									{
										"local": "player_name",
										"foreign": "player_name"
									}
								]
							}
						]
					}
				},
				{
					"name": "game_id",
					"valueType": "string",
					"description": "Game these statistics are from.",
					"restrictions": {
						"required": true,
						"foreignKey": [
							{
								"schema": "game_statistics",
								"mappings": [
									{
										"local": "game_id",
										"foreign": "game_id"
									}
								]
							}
						]
					}
				},
				{
					"name": "corsi_for_percentage",
					"valueType": "number",
					"description": "Corsi For percentage (shot attempt differential).",
					"restrictions": {
						"range": { "min": 0.0, "max": 100.0 }
					}
				},
				{
					"name": "fenwick_for_percentage",
					"valueType": "number",
					"description": "Fenwick For percentage (unblocked shot attempt differential).",
					"restrictions": {
						"range": { "exclusiveMin": 0.0, "exclusiveMax": 100.0 }
					}
				},
				{
					"name": "expected_goals",
					"valueType": "number",
					"description": "Expected goals based on shot quality and location.",
					"restrictions": {
						"range": { "min": 0.0 }
					}
				},
				{
					"name": "high_danger_chances",
					"valueType": "integer",
					"description": "Number of high-danger scoring chances.",
					"restrictions": {
						"range": { "exclusiveMin": 0 }
					}
				}
			],
			"restrictions": {
				"uniqueKeys": [["player_name", "game_id"]],
				"foreignKeys": [
					{
						"schema": "player_profiles",
						"mappings": [{ "local": "player_name", "foreign": "player_name" }]
					},
					{
						"schema": "game_statistics",
						"mappings": [{ "local": "game_id", "foreign": "game_id" }]
					}
				]
			}
		},
		{
			"name": "test_edge_cases",
			"description": "Schema specifically for testing edge cases and comprehensive validation scenarios.",
			"fields": [
				{
					"name": "record_id",
					"valueType": "string",
					"unique": true,
					"description": "Unique identifier for test records.",
					"restrictions": {
						"required": true,
						"regex": "^TEST_[A-Z]{3}_[0-9]{4}$"
					},
					"meta": {
						"examples": ["TEST_ABC_1234", "TEST_XYZ_5678"]
					}
				},
				{
					"name": "optional_field",
					"valueType": "string",
					"description": "This field demonstrates an optional field with no restrictions."
				},
				{
					"name": "exactly_two_selections",
					"valueType": "string",
					"isArray": true,
					"delimiter": ";",
					"description": "Must select exactly 2 items from the list.",
					"restrictions": {
						"codeList": ["Option A", "Option B", "Option C", "Option D", "Option E"],
						"count": 2
					}
				},
				{
					"name": "select_range_from_list",
					"valueType": "string",
					"isArray": true,
					"delimiter": ",",
					"description": "Select between 2 to 4 items from available options.",
					"restrictions": {
						"codeList": ["Red", "Blue", "Green", "Yellow", "Purple", "Orange"],
						"count": { "min": 2, "max": 4 }
					}
				},
				{
					"name": "fewer_than_three",
					"valueType": "integer",
					"isArray": true,
					"delimiter": ",",
					"description": "Select fewer than 3 numbers.",
					"restrictions": {
						"codeList": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
						"count": { "exclusiveMax": 3 }
					}
				},
				{
					"name": "more_than_one",
					"valueType": "string",
					"isArray": true,
					"delimiter": "|",
					"description": "Must select more than 1 item.",
					"restrictions": {
						"codeList": ["Alpha", "Beta", "Gamma", "Delta"],
						"count": { "exclusiveMin": 1 }
					}
				},
				{
					"name": "score_greater_than_zero",
					"valueType": "number",
					"description": "Score must be greater than 0.",
					"restrictions": {
						"range": { "exclusiveMin": 0 }
					}
				},
				{
					"name": "percentage_less_than_hundred",
					"valueType": "number",
					"description": "Percentage value that must be less than 100.",
					"restrictions": {
						"range": { "exclusiveMax": 100 }
					}
				},
				{
					"name": "age_range_example",
					"valueType": "integer",
					"description": "Age must be between 18 and 65 (inclusive).",
					"restrictions": {
						"range": { "min": 18, "max": 65 }
					}
				},
				{
					"name": "category_type",
					"valueType": "string",
					"description": "Category that determines other field requirements.",
					"restrictions": {
						"required": true,
						"codeList": ["Premium", "Standard", "Basic"]
					}
				},
				{
					"name": "premium_features",
					"valueType": "string",
					"isArray": true,
					"delimiter": ",",
					"description": "Available only for Premium category users.",
					"restrictions": {
						"if": {
							"conditions": [
								{
									"fields": ["category_type"],
									"match": {
										"value": "Premium"
									}
								}
							]
						},
						"then": {
							"required": true,
							"codeList": ["Advanced Analytics", "Priority Support", "Custom Reporting", "API Access"],
							"count": { "min": 1, "max": 3 }
						},
						"else": {
							"empty": true
						}
					}
				},
				{
					"name": "standard_or_premium_feature",
					"valueType": "string",
					"description": "Feature available for Standard and Premium users.",
					"restrictions": {
						"if": {
							"conditions": [
								{
									"fields": ["category_type"],
									"match": {
										"value": "Basic"
									}
								}
							]
						},
						"then": {
							"empty": true
						},
						"else": {
							"required": true,
							"codeList": ["Email Support", "Basic Reporting", "Standard Dashboard"]
						}
					}
				}
			],
			"restrictions": {
				"uniqueKeys": [["record_id"]],
				"foreignKeys": [
					{
						"schema": "game_statistics",
						"mappings": [
							{
								"local": "record_id",
								"foreign": "game_id"
							}
						]
					}
				]
			}
		}
	]
}
